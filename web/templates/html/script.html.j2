{% macro bower(filepath) -%}
{##}{{ url_for('static', filename='bower_components/' + filepath) }}
{%- endmacro %}
<script src="{{ bower('jquery/dist/jquery.min.js') }}"></script>
<script src="{{ bower('bootstrap/dist/js/bootstrap.min.js') }}"></script>
<script src="{{ bower('patternfly/dist/js/patternfly.min.js') }}"></script>
<script src="{{ bower('plotly.js/dist/plotly.min.js') }}"></script>

<script>
var LIBRARY = {{ library | tojson }};

function libraryToList(lib) {
    items = [];
    for (key in lib) {
        var temp = key.split('.');
        for (var i=0; i < temp.length; i++) {
            items.push( temp.slice(0, i+1).join('.') );
        };
    };
    items = [...new Set(items)];
    items.sort();
    return items;
};

function cursorToLibraryList(cursor) {
    var lib = libraryToList(LIBRARY);
    var output = [];
    for (i in lib) {
        var item = lib[i];
        if (item.includes(cursor)) {
            if (item != cursor) {
                output.push(item);
            };
        };
    };
    return output;
};

function clearChildren (node) {
    // var children = element.children;
    // for (var i=0; i < children.length; i++) {
    //     element.removeChild(children[i]);
    // }
    while (node.hasChildNodes()) {
        node.removeChild(node.lastChild);
    };
};

function addChildren (element, children) {
    for (var i = 0; i < children.length; i++) {
        element.appendChild(children[i]);
    };
};

function contains(item, arr) {
    var i = arr.length;
    while (i--) {
        if (arr[i] === item) return true;
    };
    return false;
};
// -----------------------------------------------------------------------------

function toggleSidebar() {
    var right = $("#right")[0];
    var left = $("#left")[0];
    var sidebarIcon = $("#sidebar-icon")[0];
    if (right.style.display === 'none') {
        right.style.display = 'block';
        left.style.width = "70%";
        sidebarIcon.className = "fa fa-caret-right fa-2x"
    } else {
        right.style.display = 'none';
        left.style.width = "100%";
        sidebarIcon.className = "fa fa-caret-left fa-2x"
    }
};

function refreshSearchbar(cursor, destination) {
    if (destination != '') {
        cursor = cursor + '.' + destination;
    };

    // clear searchbar's library items
    var searchbarLib = document.getElementById('library');
    searchbarLib.value = '';
    clearChildren(searchbarLib);

    var lib = cursorToLibraryList(cursor);

    for (i in lib) {
        var option = document.createElement('option');
        option.id = "searchbar-item";
        option.value = lib[i].replace(cursor + '.', '');
        searchbarLib.appendChild(option);
    };

    // clear input text and update placeholder
    var searchbar = document.getElementById('searchbar');
    searchbar.placeholder = 'search ' + cursor;
    searchbar.value = '';
};

function setBreadcrumbItemLink(e) {
    var cursor = e.srcElement.getAttribute('data-cursor');
    _refreshApp(cursor, '');
};

function refreshBreadcrumb(cursor, destination) {
    if (destination != '') {
        cursor = cursor + '.' + destination;
    };

    var breadcrumb = document.getElementById('breadcrumb-nav');
    clearChildren(breadcrumb);

    var items = [];
    if (cursor != '') {
        items = cursor.split('.');
    };

    for (var i = 0; i < items.length; i++) {
        var item = items[i];
        var element = document.createElement('li');
        element.classList.add('breadcrumb-item');

        var a = document.createElement('a');
        a.textContent = item;
        a.setAttribute( 'data-cursor', items.slice(0, i+1).join('.') );
        a.setAttribute('onclick', 'setBreadcrumbItemLink(event)');
        element.appendChild(a);
        breadcrumb.appendChild(element);

        if (i == items.length - 1) {
            element.classList.add('active');
            a.removeAttribute('onclick');
        };
    };

    // ol cannot be empty for proper display
    var empty = document.createElement('li')
    empty.id = "breadcrumb-last-dot";
    breadcrumb.appendChild(empty);

    // set new cursor
    breadcrumb.setAttribute('data-cursor', cursor);
};

function _refreshApp(cursor, destination) {
    refreshBreadcrumb(cursor, destination);
    refreshSearchbar(cursor, destination);
}

function refreshApp(e) {
    var keys = ['Enter']; //, '.'];
    if (contains(e.key, keys)) {
        var destination = document.getElementById('searchbar').value;
        var cursor = document.getElementById('breadcrumb-nav').getAttribute('data-cursor');
        if ( contains(cursor, libraryToList(LIBRARY)) ) {
            _refreshApp(cursor, destination);
        };
    };
};
// -----------------------------------------------------------------------------

$("#menu-toggle").click(function(e) {
  e.preventDefault();
  $("#wrapper").toggleClass("toggled");
});

// Init treegrid
$('.table-treegrid').treegrid();
// -----------------------------------------------------------------------------

$(document).ready(function(){
    var breadcrumb = document.getElementById('breadcrumb-nav');
    var cursor = libraryToList(LIBRARY)[0];
    breadcrumb.setAttribute('data-cursor', cursor);
    _refreshApp(cursor, '');
});
</script>
